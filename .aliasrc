#!/usr/bin/env/ bash
#------------------------#
#  Alias Settings
#  Author: Suita Fujino
#------------------------#

#-----------------
#  Major Commands
#-----------------
if ls --color=auto >/dev/null 2>&1 ; then 
    alias l='ls -ltr --color=auto'
    alias la='ls -la --color=auto'
    alias ll='ls -l --color=auto'
elif ls -G >/dev/null 2>&1 ; then 
    export LSCOLORS=xcfxcxdxbxegedabagacad
    alias l='ls -ltrG'
    alias la='ls -laG'
    alias ll='ls -lG'
else
    alias l='ls -ltr'
    alias la='ls -la'
    alias ll='ls -l'
fi

alias so='source'
alias sob='source ~/.bashrc'
alias soz='source ~/.zshrc'

alias c='cdr'
alias cg='cdr -l | grep -i --color'

cj(){
    dir=$(cdr -l | grep -i -m1 $1 | awk '{print $2}' | perl -pe "s#^~#$HOME#")
    if [[ "$dir" ]]; then
        cd "$dir"
    else
        echo "Not found: $1"
    fi
}

alias cl='clear'
alias e='exit'
alias g='grep --color=auto'
alias gv='grep -v'
alias se='sudoedit'
alias x='xargs'

alias mkd='(){mkdir -p $1; cd $_}'

alias fd='fing . -type d'
alias ff='find . -type f'
alias fl='(){cd `pwd``find . -type f | grep -m1 $1 | perl -pe "s/(^\.|\/[^\/]*$)//g"`}'
alias fxg='find . -type f | xargs grep --color -n '
alias lc='tail -2 $HISTFILE | head -1 | perl -pe "s/^[^;]+;//g"'

alias umm='(){repeat $1 echo -n ðŸ¤”; echo}'
# clipboard
if which pbcopy >/dev/null 2>&1 ; then
    alias cbc='pbcopy' # Mac
    alias cbp='pbpaste'
elif which xsel >/dev/null 2>&1 ; then
    alias cbc='xsel --clipboard --input ' # Linux
    alias cbp='xsel --clipboard --output'
fi

# open localhost
if which open >/dev/null 2>&1 ; then
    alias ol='(){open "http://localhost:$1"}'
    alias ogr='git remote get-url origin | sed -E "s/:/\//" | sed -E "s/git@/https:\/\//" | xargs open'
fi

#-----------------
#  Vim
#-----------------
mkdir -p ~/vtmp
alias v='vim'
alias vi='vim'
alias vt='(){mkdir -p `dirname $1`;vim ~/vtmp/$1}'

#-----------------
# dotfiles
#-----------------
alias dot='cd ~/dotfiles'
alias va='vim ~/.aliasrc'
alias vb='vim ~/.bashrc'
alias vv='vim ~/.vimrc'
alias vz='vim ~/.zshrc'
alias vzl='vim ~/.zsh_local'

#-----------------
# git
#-----------------
alias ga='git add'
alias gaa='git add -A'
alias gb='git branch'
alias gbdm='git branch --merged | grep -v master | grep -v develop | xargs git branch -d'
alias gbm='git branch --merged'
alias gc='git checkout'
alias gcam='git commit -am'
alias gcb='git checkout -b'
alias gcm='git commit -m'
alias gcod='git checkout develop && git pull --rebase origin develop'
alias gcom='git checkout master && git pull --rebase origin master'
alias gd='git diff'
alias gdcd='git difftool -y -x "colordiff -y -W $COLUMNS"'
alias gdvd='git difftool -y -x "vimdiff -W $COLUMNS"'
alias gf='git fetch'
alias gfo='git fetch origin'
alias gg='git grep -n'
alias gl='git log'
alias glf='git log --graph --branches --pretty=format:"%C(yellow)%h%C(cyan)%d%Creset %s %C(green)- %an, %cr%Creset"'
alias glo='git log --oneline'
alias gls='git log --oneline --stat --graph'
alias gm='git merge --no-ff'
alias gow='git log --pretty="%ai %an" | sort -u -k1,1 | sort -k2 -r'
alias gp='git push'
alias gpl='git pull'
alias gpo='git push origin'
alias gpoh='git push origin HEAD'
alias gpro='git pull --rebase origin'
alias gr1='git reset HEAD~'
alias gr='git reset'
alias grao='git remote add origin'
alias grb='git rebase'
alias grba='git rebase --abort'
alias grbc='git rebase --continue'
alias grh='git reset HEAD'
alias grp='git rev-parse'
alias grpo='git remote prune origin'
alias grso='git remote show origin'
alias gs='git status'
alias gsp='git stash pop'
alias gst='git stash'

gch(){
    git checkout $1 | perl -pe "s#(ahead|up to date)#\e\[38;05;31m\1\e[0m#;s#(behind)#\e\[38;05;196m\1\e[0m#"
}

gco(){
    git checkout $1
    git pull --rebase origin $1
}
gcbf(){
    git checkout -b "feature/$1"
}
gign() {
    cp .gitignore .gitignore_
    res=$(curl https://raw.githubusercontent.com/github/gitignore/master/$1.gitignore)
    if [[ $res =~ "404: Not Found" ]]; then
        echo $res
    else
        echo "$res" > .gitignore
    fi
}
# alias ghooks='(){cp ~/dotfiles/githooks/* ./.git/hooks/; chmod a+x ./.git/hooks/*}'
ghooks() {
    GIT_ROOT=`git rev-parse --git-dir 2>/dev/null`
    if [ "$GIT_ROOT" ]; then
        cp ~/dotfiles/githooks/* $GIT_ROOT/hooks/
        chmod a+x $GIT_ROOT/hooks/*
    fi
}
rmhooks() {
    GIT_ROOT=`git rev-parse --git-dir 2>/dev/null`
    if [ "$GIT_ROOT" ]; then
        rm $GIT_ROOT/hooks/pre-commit
        rm $GIT_ROOT/hooks/pre-push
    fi
}

alias eg='echo $1 >> .gitignore'

#-----------------
#  Perl
#-----------------
alias p='perl'
alias pe='perl -e'
alias ppe='perl -pe'
alias pne='perl -ne'

#-----------------
#  Homebrew
#-----------------
alias bi='brew install'
alias bl='brew list'
alias bs='brew search'

#-----------------
#  Vagrant
#-----------------
alias vag='vagrant'

#-----------------
#  Virtualenv
#-----------------
alias venv='virtualenv'
alias von='source bin/activate'
alias voff='deactivate'

#-----------------
#  Nodebrew
#-----------------
alias nb='nodebrew'

#-----------------
#  ImageMagick
#-----------------
tojpg(){
    convert -quality 70 $1 `echo $1 | sed -E 's/\..+/.jpg/'`
}
resize(){
    convert -resize $2 $1 $1
}

#-----------------
#  ffmpeg
#-----------------
togif(){
    ffmpeg -i $1 -vf scale=320:-1 -r 15 $1.gif
}

#-----------------
#  license
#-----------------
mkli() {
    cat ~/dotfiles/license-template/$1 | sed -E "s/#YEAR/`date '+%Y'`/" | sed -E "s/#AUTHOR/$2/" > LICENSE
}

